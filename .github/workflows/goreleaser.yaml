name: releaser

on:
  push:
    branches:
      - feature/delta/releaser
  release:
    types: [published]

permissions:
  packages: write
  issues: write
  id-token: write
  contents: write

jobs:
  rust-releaser-mac:
    runs-on: macos-12
    strategy:
      matrix:
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: '3.x'
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - name: Run Cargo
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --manifest-path pkg/plugins/diff/delta_diff_server/Cargo.toml

  rust-releaser-unix:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-musl
          - x86_64-unknown-linux-musl
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - name: Run Cargo
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --manifest-path pkg/plugins/diff/delta_diff_server/Cargo.toml

  rust-releaser-windows:
    runs-on: windows-2022
    strategy:
      matrix:
        target:
          - x86_64-pc-windows-msvc
          - aarch64-pc-windows-msvc
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - name: Run Cargo
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --manifest-path pkg/plugins/diff/delta_diff_server/Cargo.toml

#  goreleaser:
#    runs-on: ubuntu-20.04
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#
#      - name: Setup NodeJS
#        uses: actions/setup-node@v3
#        with:
#          node-version: '16.17.1'
#
#      - name: Setup Go
#        uses: actions/setup-go@v3
#        with:
#          go-version: 1.19.2
#
#      - name: Configure AWS Credentials
#        uses: aws-actions/configure-aws-credentials@v1.7.0
#        with:
#          aws-region: us-east-1
#          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
#
#      - name: Run GoReleaser
#        uses: goreleaser/goreleaser-action@v3
#        with:
#          version: latest
#          args: build #release --rm-dist
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Make lakectl public
#        run: aws s3 cp --recursive --acl public-read "s3://treeverse-clients-us-east/lakectl/$(echo ${GITHUB_REF##*/} | cut -d. -f1-2)" "s3://treeverse-clients-us-east/lakectl/$(echo ${GITHUB_REF##*/} | cut -d. -f1-2)" --metadata-directive REPLACE
