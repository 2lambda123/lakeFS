/*
 * lakeFS API
 * lakeFS HTTP API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.lakefs.clients.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.lakefs.clients.api.model.GCUncommittedPagination;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * GarbageCollectionPrepareUncommittedResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GarbageCollectionPrepareUncommittedResponse {
  public static final String SERIALIZED_NAME_RUN_ID = "run_id";
  @SerializedName(SERIALIZED_NAME_RUN_ID)
  private String runId;

  public static final String SERIALIZED_NAME_GC_UNCOMMITTED_LOCATION = "gc_uncommitted_location";
  @SerializedName(SERIALIZED_NAME_GC_UNCOMMITTED_LOCATION)
  private String gcUncommittedLocation;

  public static final String SERIALIZED_NAME_PAGINATION = "pagination";
  @SerializedName(SERIALIZED_NAME_PAGINATION)
  private GCUncommittedPagination pagination;


  public GarbageCollectionPrepareUncommittedResponse runId(String runId) {
    
    this.runId = runId;
    return this;
  }

   /**
   * a unique identifier generated for this GC job
   * @return runId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "64eaa103-d726-4a33-bcb8-7c0b4abfe09e", required = true, value = "a unique identifier generated for this GC job")

  public String getRunId() {
    return runId;
  }


  public void setRunId(String runId) {
    this.runId = runId;
  }


  public GarbageCollectionPrepareUncommittedResponse gcUncommittedLocation(String gcUncommittedLocation) {
    
    this.gcUncommittedLocation = gcUncommittedLocation;
    return this;
  }

   /**
   * location of the resulting uncommitted objects parquet file
   * @return gcUncommittedLocation
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "s3://my-storage-namespace/_lakefs/gc/<run_id>/", required = true, value = "location of the resulting uncommitted objects parquet file")

  public String getGcUncommittedLocation() {
    return gcUncommittedLocation;
  }


  public void setGcUncommittedLocation(String gcUncommittedLocation) {
    this.gcUncommittedLocation = gcUncommittedLocation;
  }


  public GarbageCollectionPrepareUncommittedResponse pagination(GCUncommittedPagination pagination) {
    
    this.pagination = pagination;
    return this;
  }

   /**
   * Get pagination
   * @return pagination
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public GCUncommittedPagination getPagination() {
    return pagination;
  }


  public void setPagination(GCUncommittedPagination pagination) {
    this.pagination = pagination;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GarbageCollectionPrepareUncommittedResponse garbageCollectionPrepareUncommittedResponse = (GarbageCollectionPrepareUncommittedResponse) o;
    return Objects.equals(this.runId, garbageCollectionPrepareUncommittedResponse.runId) &&
        Objects.equals(this.gcUncommittedLocation, garbageCollectionPrepareUncommittedResponse.gcUncommittedLocation) &&
        Objects.equals(this.pagination, garbageCollectionPrepareUncommittedResponse.pagination);
  }

  @Override
  public int hashCode() {
    return Objects.hash(runId, gcUncommittedLocation, pagination);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GarbageCollectionPrepareUncommittedResponse {\n");
    sb.append("    runId: ").append(toIndentedString(runId)).append("\n");
    sb.append("    gcUncommittedLocation: ").append(toIndentedString(gcUncommittedLocation)).append("\n");
    sb.append("    pagination: ").append(toIndentedString(pagination)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

